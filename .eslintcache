[{"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\MainContent.js":"1","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameDisplay.js":"2","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameStartDisplay.js":"3","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\App.js":"4","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\QuestionDisplay.js":"5","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\reportWebVitals.js":"6"},{"size":3102,"mtime":1607575688249,"results":"7","hashOfConfig":"8"},{"size":2960,"mtime":1607577308338,"results":"9","hashOfConfig":"8"},{"size":1857,"mtime":1607577501152,"results":"10","hashOfConfig":"8"},{"size":536,"mtime":1607513968826,"results":"11","hashOfConfig":"8"},{"size":2574,"mtime":1607568295841,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"jt8xh3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\MainContent.js",["28","29","30"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Col, Row } from 'antd'\r\n\r\nimport GameDisplay from './GameDisplay'\r\nimport GameStartDisplay from './GameStartDisplay'\r\nimport d from './data/data.json';\r\n\r\nexport const DataContext = React.createContext()\r\nexport const TeamContext = React.createContext()\r\n\r\nconst testTeam = [\r\n    {\r\n        id: 1,\r\n        name: \"team 1\",\r\n        score: 100,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"team 2\",\r\n        score: 400,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"team 3\",\r\n        score: 200,\r\n    }\r\n]\r\n\r\nfunction MainContent() {\r\n    const [score, setScore] = useState([]);\r\n    const [teamList, setTeamList] = useState(testTeam);\r\n    const [gameEnd, setGameEnd] = useState(false)\r\n    const [winningTeam, setWinningTeam] = useState({})\r\n\r\n    const setTeam = (value) => {\r\n        setTeamList(value);\r\n    }\r\n\r\n    const endGame = () => {\r\n        var max = {teamName: \"\", score: 0}\r\n        for (var i = 0; i < teamList.length; i++) {\r\n            if (teamList[i].score > max.score) {\r\n                max = {...teamList[i]}\r\n            }\r\n        }\r\n        setWinningTeam(max);\r\n        setGameEnd(true);\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={d}>\r\n            <TeamContext.Provider value={[teamList, setTeamList]}>\r\n                <Row>\r\n                    <Col span={1}></Col>\r\n                    <Col span={22}>\r\n                        <Row>\r\n                            <Col span={19}>\r\n                                {\r\n                                    gameEnd ?\r\n                                        <div> \r\n                                            <h1>{\"CONGRATZZZZ   \" + winningTeam.name + \"!!!!!!!!\"}</h1>\r\n                                        </div>\r\n                                    :\r\n                                        <GameDisplay />\r\n                                }\r\n                            </Col>\r\n                            <Col span={5} style={style.scoreBoard}>\r\n                                <Row><Col span={24}><h1 style={{margin: '0.5em 0'}}>Scoreboard</h1></Col></Row>\r\n                                {\r\n                                    teamList.map((val) => \r\n                                        <Row>\r\n                                            <Col span={12}><h1>{val.name}</h1></Col>\r\n                                            <Col span={12}><h1>{val.score}</h1></Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                <Row><Col span={24}><Button onClick={endGame} type='primary'>End Game</Button></Col></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={1}></Col>\r\n                    <GameStartDisplay setTeam={setTeam} />\r\n                </Row>\r\n            </TeamContext.Provider>\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    scoreBoard: {\r\n        background: '#ffcd8d'\r\n    }\r\n}\r\n\r\nexport default MainContent","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameDisplay.js",["31","32","33","34"],"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameStartDisplay.js",["35","36","37","38","39"],"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\App.js",["40","41","42","43","44","45"],"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\QuestionDisplay.js",["46","47","48"],"import React, {useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Row } from 'antd'\r\n\r\nimport { TeamContext } from './MainContent'\r\n\r\n\r\nfunction QuestionDisplay(props) {\r\n    const [teamList, setTeamList] = useContext(TeamContext);\r\n    const [seeSolution, setSeeSolution] = useState(false);\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    const updatePoint = (val, point) => {\r\n        var currTeam = [...teamList];\r\n        var currScore = currTeam[val.id - 1].score;\r\n        var selectedTeam = {...teamList[val.id - 1], score: currScore + point}\r\n\r\n        currTeam[val.id - 1] = selectedTeam;\r\n        setTeamList(currTeam);\r\n\r\n        // while ()\r\n    }\r\n    return (\r\n        <div className=\"container\" style={style.container}>\r\n            <Row>\r\n                <Col span={24}><h1 style={style.text}>{props.data.category}</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                {\r\n                    seeSolution ?\r\n                        <Col span={24}><h1 style={style.text}>{props.data.answer}</h1></Col>\r\n                    : \r\n                        <Col span={24}><h1 style={style.mainText} onClick={() => setSeeSolution(true)}>{props.data.question}</h1></Col>\r\n\r\n                }\r\n            </Row>\r\n            <Row>\r\n                <Col span={4}></Col>\r\n                <Col span={16}>\r\n                    <Row>\r\n                        {\r\n                            teamList.map((val) => {\r\n                                return (\r\n                                        <Col span={8}><Button style={style.team} type=\"primary\" size=\"middle\" onClick={() => updatePoint(val, props.data.point)}>{val.name}</Button></Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n                <Col span={4}></Col>\r\n           </Row>\r\n           {/* <Row><Col span={4}><Button type=\"primary\" onClick={props.toMain}>Backkkkkk</Button></Col></Row> */}\r\n           <Row><Col span={24} onClick={props.toMain}><h1>&nbsp;</h1></Col></Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    container: {\r\n        backgroundColor: '#060CE9',\r\n    }, \r\n    text: {\r\n        color: 'white',\r\n        margin: '2em 0',\r\n        fontSize: '20pt'\r\n    }, \r\n    mainText: {\r\n        color: 'white',\r\n        margin: '0 1em 2em 1em',\r\n        fontSize: '25pt'\r\n    },\r\n    team: {\r\n        background: '#FF9C1C',\r\n        margin: '2px',\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    }\r\n}\r\n\r\nexport default QuestionDisplay","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\reportWebVitals.js",[],{"ruleId":"49","severity":1,"message":"50","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"53","line":30,"column":12,"nodeType":"51","messageId":"52","endLine":30,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":30,"column":19,"nodeType":"51","messageId":"52","endLine":30,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":37},{"ruleId":"49","severity":1,"message":"55","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"57","line":32,"column":27,"nodeType":"58","messageId":"59","endLine":32,"endColumn":29},{"ruleId":"56","severity":1,"message":"57","line":62,"column":27,"nodeType":"58","messageId":"59","endLine":62,"endColumn":29},{"ruleId":"49","severity":1,"message":"60","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"61","line":2,"column":42,"nodeType":"51","messageId":"52","endLine":2,"endColumn":45},{"ruleId":"56","severity":1,"message":"57","line":12,"column":26,"nodeType":"58","messageId":"59","endLine":12,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":14,"column":47,"nodeType":"64","messageId":"65","endLine":14,"endColumn":49},{"ruleId":"56","severity":1,"message":"57","line":53,"column":26,"nodeType":"58","messageId":"59","endLine":53,"endColumn":28},{"ruleId":"49","severity":1,"message":"66","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"55","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":16},{"ruleId":"49","severity":1,"message":"60","line":3,"column":18,"nodeType":"51","messageId":"52","endLine":3,"endColumn":21},{"ruleId":"49","severity":1,"message":"61","line":3,"column":31,"nodeType":"51","messageId":"52","endLine":3,"endColumn":34},{"ruleId":"49","severity":1,"message":"67","line":7,"column":9,"nodeType":"51","messageId":"52","endLine":7,"endColumn":15},{"ruleId":"49","severity":1,"message":"68","line":7,"column":17,"nodeType":"51","messageId":"52","endLine":7,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":37},{"ruleId":"49","severity":1,"message":"69","line":10,"column":12,"nodeType":"51","messageId":"52","endLine":10,"endColumn":19},{"ruleId":"49","severity":1,"message":"70","line":10,"column":21,"nodeType":"51","messageId":"52","endLine":10,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Col' is defined but never used.","'Row' is defined but never used.","array-callback-return","Array.from() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used."]