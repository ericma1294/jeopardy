[{"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\MainContent.js":"1","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameDisplay.js":"2","C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameStartDisplay.js":"3"},{"size":3102,"mtime":1607575688249,"results":"4","hashOfConfig":"5"},{"size":2960,"mtime":1607575352745,"results":"6","hashOfConfig":"5"},{"size":1858,"mtime":1607575698088,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jt8xh3",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\MainContent.js",["15","16","17"],"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameDisplay.js",["18","19","20","21"],"C:\\Users\\ericm\\desktop\\coding\\jeopardy\\src\\GameStartDisplay.js",["22","23","24","25","26"],"import React, {useState} from 'react'\r\nimport { Col, Input, InputNumber, Modal, Row} from 'antd'\r\n\r\nfunction GameStartDisplay(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [teamNum, setTeamNum] = useState(0);\r\n    const [displayState, setDisplayState] = useState(1);\r\n    const [teamList, setTeamList] = useState([]);\r\n\r\n    const handleOk = () => {\r\n        if (displayState == 1) {\r\n            var teamListData = [];\r\n            Array.from(Array(teamNum), (e, i) => {\r\n                var teamData = {\r\n                    id: i + 1,\r\n                    name: \"\",\r\n                    score: 0,\r\n                }\r\n                teamListData = [...teamListData, teamData];\r\n            })\r\n\r\n            setTeamList(teamListData);\r\n\r\n            setDisplayState(2);\r\n        } else {\r\n            props.setTeam(teamList);\r\n            setIsVisible(false);\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        setTeamNum(value);\r\n    }\r\n\r\n    const onEdit = (e, value) => {\r\n        var selectedTeam = {...value};\r\n        var currTeam = [...teamList];\r\n        selectedTeam.name = e.target.value;\r\n        \r\n        currTeam[value.id - 1] = selectedTeam;\r\n        setTeamList(currTeam);        \r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            title=\"How many teams?\"\r\n            visible={isVisible}\r\n            onOk={handleOk}\r\n        >\r\n        {\r\n            displayState == 1 ? \r\n                <InputNumber min={1} max={10} defaultValue={teamNum} onChange={onChange} />\r\n            : \r\n            teamList.map((val) => {\r\n                return  <Input key={val.id} \r\n                               placeholder={\"team \" + val.id} \r\n                               onChange={(e) => onEdit(e, val)} /> \r\n            })\r\n        }\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default GameStartDisplay",{"ruleId":"27","severity":1,"message":"28","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},{"ruleId":"27","severity":1,"message":"31","line":30,"column":12,"nodeType":"29","messageId":"30","endLine":30,"endColumn":17},{"ruleId":"27","severity":1,"message":"32","line":30,"column":19,"nodeType":"29","messageId":"30","endLine":30,"endColumn":27},{"ruleId":"27","severity":1,"message":"28","line":1,"column":28,"nodeType":"29","messageId":"30","endLine":1,"endColumn":37},{"ruleId":"27","severity":1,"message":"33","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":32,"column":27,"nodeType":"36","messageId":"37","endLine":32,"endColumn":29},{"ruleId":"34","severity":1,"message":"35","line":62,"column":27,"nodeType":"36","messageId":"37","endLine":62,"endColumn":29},{"ruleId":"27","severity":1,"message":"38","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":13},{"ruleId":"27","severity":1,"message":"39","line":2,"column":42,"nodeType":"29","messageId":"30","endLine":2,"endColumn":45},{"ruleId":"34","severity":1,"message":"35","line":12,"column":26,"nodeType":"36","messageId":"37","endLine":12,"endColumn":28},{"ruleId":"40","severity":1,"message":"41","line":14,"column":47,"nodeType":"42","messageId":"43","endLine":14,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":53,"column":26,"nodeType":"36","messageId":"37","endLine":53,"endColumn":28},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Col' is defined but never used.","'Row' is defined but never used.","array-callback-return","Array.from() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]