{"version":3,"sources":["QuestionDisplay.js","GameDisplay.js","GameStartDisplay.js","congratz.gif","nelsonMandela.PNG","dogs.jpeg","MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["style","container","backgroundColor","text","color","margin","fontSize","mainText","mc","team","background","fontWeight","QuestionDisplay","props","useContext","TeamContext","teamList","setTeamList","useState","seeSolution","setSeeSolution","className","span","data","category","answer","onClick","question","length","map","val","type","size","point","currTeam","currScore","id","score","selectedTeam","updatePoint","name","console","log","i","updateAllPoints","toMain","grid","border","GameDisplay","gameState","setGameState","selectedData","setSelectedData","DataContext","changeState","isSelected","selected","content","v","value","opacity","GameStartDisplay","isVisible","setIsVisible","teamNum","setTeamNum","displayState","setDisplayState","title","visible","onOk","teamListData","Array","from","e","teamData","setTeam","min","max","defaultValue","onChange","placeholder","target","onEdit","React","createContext","scoreBoard","MainContent","gameEnd","setGameEnd","winningTeam","setWinningTeam","Provider","d","src","endimg","teamName","Content","Layout","Header","Footer","App","padding","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e85732.chunk.js","sourcesContent":["import React, {useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Row } from 'antd'\r\n\r\nimport { TeamContext } from './MainContent'\r\n\r\n\r\nfunction QuestionDisplay(props) {\r\n    const [teamList, setTeamList] = useContext(TeamContext);\r\n    const [seeSolution, setSeeSolution] = useState(false);\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    const [ score , setScore ] = useState(100);\r\n\r\n    const updatePoint = (val, point) => {\r\n\r\n        var currTeam = [...teamList];\r\n        var currScore = currTeam[val.id - 1].score;\r\n        var selectedTeam = {...teamList[val.id - 1], score: currScore + point}\r\n        currTeam[val.id - 1] = selectedTeam;\r\n        setTeamList(currTeam);\r\n        \r\n    }\r\n\r\n    const updateAllPoints = (point) => {\r\n        console.log('@@@@', point);\r\n        var currTeam = [...teamList];\r\n        for (var i = 0; i < currTeam.length; i++) {\r\n            var currScore = currTeam[i].score;\r\n            var selectedTeam = {...teamList[i], score: currScore + point}\r\n            currTeam[i] = selectedTeam;\r\n        }\r\n        setTeamList(currTeam);\r\n    }\r\n    return (\r\n        <div className=\"container\" style={style.container}>\r\n            <Row>\r\n                <Col span={24}><h1 style={style.text}>{props.data.category}</h1></Col>\r\n            </Row>\r\n            {\r\n                seeSolution ?\r\n                    <Row>\r\n                        <Col span={24}><h1 style={style.text}>{props.data.answer}</h1></Col>\r\n                    </Row>\r\n                :\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={24}><h1 style={style.mainText} onClick={() => setSeeSolution(true)}>{props.data.question}</h1></Col>\r\n                        </Row>\r\n                        {\r\n                            props.data['mc'].length === 0 ?\r\n                                <div></div>\r\n                            :\r\n                            <div>\r\n                                {\r\n                                    props.data.mc.map((val) => \r\n                                        <Row>\r\n                                            <Col span={24}><h1 style={style.mc}>{val}</h1></Col>\r\n                                        </Row>  \r\n                                    )\r\n                                }\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n            }\r\n            <Row>\r\n                <Col span={4}></Col>\r\n                <Col span={16}>\r\n                    <Row>\r\n                        {\r\n                            teamList.map((val) => {\r\n                                return (\r\n                                        <Col span={8}><Button style={style.team} type=\"primary\" size=\"middle\" onClick={() => updatePoint(val, props.data.point)}>{val.name}</Button></Col>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n                <Col span={4}></Col>\r\n           </Row>\r\n           <Row><Col span={24}><Button style={style.team} onClick={() => updateAllPoints(props.data.point)} type='primary' size=\"large\">ALL</Button></Col></Row>\r\n           <Row><Col span={24} onClick={props.toMain}><h1>&nbsp;</h1></Col></Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    container: {\r\n        backgroundColor: '#060CE9',\r\n    }, \r\n    text: {\r\n        color: 'white',\r\n        margin: '0.5em 0',\r\n        fontSize: '30pt'\r\n    }, \r\n    mainText: {\r\n        color: 'white',\r\n        margin: '0 1em 0.5em 1em',\r\n        fontSize: '30pt'\r\n    },\r\n    mc: {\r\n        color: 'white',\r\n        fontSize: '25pt'\r\n    },\r\n    team: {\r\n        background: '#FF9C1C',\r\n        margin: '2px',\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    }\r\n}\r\n\r\nexport default QuestionDisplay","import React, {useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Row } from 'antd'\r\nimport './Test.css'\r\n\r\nimport { DataContext } from './MainContent'\r\nimport QuestionDisplay from './QuestionDisplay'\r\n\r\nfunction GameDisplay(props) {\r\n    const [gameState, setGameState] = useState(1);\r\n    const [selectedData, setSelectedData] = useState({});\r\n\r\n    const data = useContext(DataContext);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('######', data['data'][0].content)\r\n    // })\r\n    \r\n    const changeState = (val) => {\r\n        const isSelected = {...val, selected: true}\r\n        data['data'][(val.point / 100 ) - 1].content[val.id -1] = isSelected\r\n\r\n        setGameState(2);\r\n        setSelectedData(val);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                gameState == 1 ?\r\n                    <div>\r\n                        <Row>\r\n                            {\r\n                                data['data'][0].content.map((v) => \r\n                                    <Col span={6} style={style.grid}><h1 style={style.text}>{v.category}</h1></Col>\r\n                                )\r\n                            }\r\n                      \r\n                        </Row>\r\n                        {\r\n                            data['data'].map((value) => \r\n                                <Row>\r\n                                    {\r\n                                        value['content'].map((v) => \r\n                                            v.selected ? \r\n                                                <Col style={{...style.grid, background: '#323232'}} span={6} onClick={() => changeState(v)}>\r\n                                                    <h1 style={{...style.text, opacity: '0.5'}}>{value.point}</h1>\r\n                                                </Col>\r\n                                            : \r\n                                                <Col style={style.grid} span={6} onClick={() => changeState(v)}>\r\n                                                    <h1 style={style.text}>{value.point}</h1>\r\n                                                </Col>\r\n                                        )\r\n                                    }\r\n                                </Row>\r\n                            )   \r\n                        }\r\n                    </div>\r\n                : \r\n                gameState == 2 ?\r\n                // <Button type='primary' onClick={() => setGameState(1)}>backkkkk</Button>\r\n                    <QuestionDisplay \r\n                        data={selectedData}\r\n                        toMain={() => setGameState(1)} />\r\n\r\n                : \r\n                <h1>HELLO WORLD!!</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    grid: {\r\n        background: '#060CE9', \r\n        border: 'black 2px solid'\r\n    },\r\n    text: {\r\n        color: \"white\",\r\n        fontSize: '24pt'\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GameDisplay","import React, {useState} from 'react'\r\nimport { Col, Input, InputNumber, Modal, Row} from 'antd'\r\n\r\nfunction GameStartDisplay(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const [teamNum, setTeamNum] = useState(0);\r\n    const [displayState, setDisplayState] = useState(1);\r\n    const [teamList, setTeamList] = useState([]);\r\n\r\n    const handleOk = () => {\r\n        if (displayState == 1) {\r\n            var teamListData = [];\r\n            Array.from(Array(teamNum), (e, i) => {\r\n                var teamData = {\r\n                    id: i + 1,\r\n                    name: \"\",\r\n                    score: 0,\r\n                }\r\n                teamListData = [...teamListData, teamData];\r\n            })\r\n\r\n            setTeamList(teamListData);\r\n\r\n            setDisplayState(2);\r\n        } else {\r\n            props.setTeam(teamList);\r\n            setIsVisible(false);\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        setTeamNum(value);\r\n    }\r\n\r\n    const onEdit = (e, value) => {\r\n        var selectedTeam = {...value};\r\n        var currTeam = [...teamList];\r\n        selectedTeam.name = e.target.value;\r\n        \r\n        currTeam[value.id - 1] = selectedTeam;\r\n        setTeamList(currTeam);        \r\n    }\r\n\r\n    return (\r\n        <Modal \r\n            title=\"How many teams?\"\r\n            visible={isVisible}\r\n            onOk={handleOk}\r\n        >\r\n        {\r\n            displayState == 1 ? \r\n                <InputNumber min={1} max={10} defaultValue={teamNum} onChange={onChange} />\r\n            : \r\n            teamList.map((val) => {\r\n                return  <Input key={val.id} \r\n                               placeholder={\"team \" + val.id} \r\n                               onChange={(e) => onEdit(e, val)} /> \r\n            })\r\n        }\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default GameStartDisplay","export default __webpack_public_path__ + \"static/media/congratz.b19f0dd7.gif\";","export default __webpack_public_path__ + \"static/media/nelsonMandela.565a423b.PNG\";","export default __webpack_public_path__ + \"static/media/dogs.bd4048a8.jpeg\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Col, Row } from 'antd'\r\n\r\nimport GameDisplay from './GameDisplay'\r\nimport GameStartDisplay from './GameStartDisplay'\r\nimport d from './data/data2.json';\r\n\r\nimport testimg  from './nelsonMandela.PNG'\r\nimport testimg2 from './dogs.jpeg';\r\nimport endimg from './congratz.gif'\r\n\r\nexport const DataContext = React.createContext()\r\nexport const TeamContext = React.createContext()\r\n\r\nconst testTeam = [\r\n    {\r\n        id: 1,\r\n        name: \"team 1\",\r\n        score: 0,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"team 2\",\r\n        score: 0,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"team 3\",\r\n        score: 0,\r\n    },   \r\n\r\n]\r\n\r\nfunction MainContent() {\r\n    const [score, setScore] = useState([]);\r\n    const [teamList, setTeamList] = useState([]);\r\n    const [gameEnd, setGameEnd] = useState(false)\r\n    const [winningTeam, setWinningTeam] = useState({})\r\n\r\n    const setTeam = (value) => {\r\n        setTeamList(value);\r\n    }\r\n\r\n    const endGame = () => {\r\n        var max = {teamName: \"\", score: 0}\r\n        for (var i = 0; i < teamList.length; i++) {\r\n            if (teamList[i].score > max.score) {\r\n                max = {...teamList[i]}\r\n            }\r\n        }\r\n        setWinningTeam(max);\r\n        setGameEnd(true);\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={d}>\r\n            <TeamContext.Provider value={[teamList, setTeamList]}>\r\n                <Row>\r\n                    <Col span={1}></Col>\r\n                    <Col span={22}>\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                {\r\n                                    gameEnd ?\r\n                                        <div> \r\n                                            <h1>{\"CONGRATZZZZ   \" + winningTeam.name + \"!!!!!!!!\"}</h1>\r\n                                            <img src={endimg} />\r\n                                        </div>\r\n                                    :\r\n                                        <GameDisplay />\r\n                                }\r\n                            </Col>\r\n                            <Col span={6} style={style.scoreBoard}>\r\n                                <Row><Col span={24}><h1 style={{margin: '0.5em 0'}}>Scoreboard</h1></Col></Row>\r\n                                {\r\n                                    teamList.map((val) => \r\n                                        <Row>\r\n                                            <Col span={12}><h1>{val.name}</h1></Col>\r\n                                            <Col span={12}><h1>{val.score}</h1></Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                <Row><Col span={24}><Button onClick={endGame} type='primary'>End Game</Button></Col></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={1}></Col>\r\n                    <GameStartDisplay setTeam={setTeam} />\r\n                    {/* <div>\r\n                        <img src={testimg} />\r\n                        <img src={require('./nelsonMandela.PNG')} />\r\n                        <img src={testimg2} />\r\n                        <img src={require('./dogs.jpeg')} />\r\n                    </div> */}\r\n                </Row>\r\n            </TeamContext.Provider>\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    scoreBoard: {\r\n        background: '#ffcd8d'\r\n    }\r\n}\r\n\r\nexport default MainContent","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { Button, Col, Layout, Row } from 'antd';\n\nimport MainContent from './MainContent'\n\nconst { Header, Footer, Content } = Layout\n\n\nfunction App() {\n  const [ state, setState ] = useState(1);\n\n\n  return (\n    <Layout className=\"App\">\n        {/* <Header>Insert Some Title Here</Header> */}\n\n        <Content style={{padding: '5vh', background: '#e6e6fc', height: '100vh'}}>\n          <MainContent /> \n        </Content>\n        \n        {/* <Footer>Insert some Footer Here</Footer> */}\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}